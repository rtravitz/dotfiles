#!/usr/bin/env bash
set +e

# cid (stands for "container id") is a script to grab docker container ids. It's a bit specific to my
# workflow currently—I often remember an image name and want to quickly
# exec into a container. This script lets me create a command like:
# docker exec -it $(cid postgres) bash

usage() {
 echo 'usage: cid {image search term}'   
}

if [ -z $1 ]; then
  echo 'provide a search term'
  usage

  exit 1
fi

# matches are currently only against the image name.
# a line in matching_containers ends up looking like:
# 9f7f8d16462a postgres:9.6
matching_containers=$(docker ps | awk '{ print $1, $2 }' | sed 1d | grep $1)

# remove blank lines before counting the results—otherwise it will never
# show that container count is zero.
container_count=$(echo "$matching_containers" | sed '/^\s*$/d' | wc -l)

if [ $container_count -eq 0 ]; then
  echo 'no image matches found'
  exit 2
fi

if [ $container_count -gt 1  ]; then
  echo 'multiple image matches found:'
  echo "$matching_containers" | awk '{ print $2 }'
  exit 3
fi

echo $matching_containers | awk '{ print $1 }'

